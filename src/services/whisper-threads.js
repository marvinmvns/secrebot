import os from 'os';
import { nodewhisper } from 'nodejs-whisper';
import { CONFIG } from '../config/index.js';

// Detecta n√∫mero de n√∫cleos de CPU e ajusta vari√°veis de ambiente
const cpuCount = os.cpus().length || 1;
process.env.OMP_NUM_THREADS = String(cpuCount);
process.env.MKL_NUM_THREADS = String(cpuCount);

/**
 * Transcreve um arquivo de √°udio usando o nodejs-whisper.
 * @param {string} filePath Caminho para o arquivo de √°udio.
 * @returns {Promise<string>} Texto transcrito.
 */
export async function transcribe(filePath) {
  const start = Date.now();
  try {
    console.log(`üé§ Transcrevendo: ${filePath}`);
    const text = await nodewhisper(filePath, {
      modelName: CONFIG.audio.model,
      autoDownloadModelName: CONFIG.audio.model,
      withCuda: false,
      removeWavFileAfterTranscription: false,
      whisperOptions: {
        outputInText: true,
        language: CONFIG.audio.language,
      },
    });
    const duration = ((Date.now() - start) / 1000).toFixed(2);
    console.log(`‚úÖ Transcri√ß√£o conclu√≠da em ${duration}s`);
    return text.trim();
  } catch (err) {
    console.error('‚ùå Erro na transcri√ß√£o:', err.message);
    throw err;
  }
}
