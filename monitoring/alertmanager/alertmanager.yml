global:
  smtp_smarthost: 'localhost:587'
  smtp_from: 'alerts@secrebot.local'
  smtp_auth_username: ''
  smtp_auth_password: ''

route:
  group_by: ['alertname', 'service']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 1h
  receiver: 'web.hook'
  routes:
    - match:
        severity: critical
      receiver: 'critical-alerts'
      group_wait: 5s
      repeat_interval: 30m
    - match:
        severity: warning
      receiver: 'warning-alerts'
      repeat_interval: 2h
    - match:
        severity: info
      receiver: 'info-alerts'
      repeat_interval: 24h

receivers:
  - name: 'web.hook'
    webhook_configs:
      - url: 'http://host.docker.internal:3000/api/alerts/webhook'
        send_resolved: true
        http_config:
          basic_auth:
            username: 'alertmanager'
            password: 'webhook_secret'

  - name: 'critical-alerts'
    webhook_configs:
      - url: 'http://host.docker.internal:3000/api/alerts/webhook'
        send_resolved: true
        http_config:
          basic_auth:
            username: 'alertmanager'
            password: 'webhook_secret'
    # Uncomment and configure for email notifications
    # email_configs:
    #   - to: 'admin@yourcompany.com'
    #     subject: 'ðŸš¨ SecreBot Critical Alert: {{ .GroupLabels.alertname }}'
    #     body: |
    #       {{ range .Alerts }}
    #       Alert: {{ .Annotations.summary }}
    #       Description: {{ .Annotations.description }}
    #       Service: {{ .Labels.service }}
    #       Time: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
    #       {{ end }}

  - name: 'warning-alerts'
    webhook_configs:
      - url: 'http://host.docker.internal:3000/api/alerts/webhook'
        send_resolved: true
        http_config:
          basic_auth:
            username: 'alertmanager'
            password: 'webhook_secret'
        
  - name: 'info-alerts'
    webhook_configs:
      - url: 'http://host.docker.internal:3000/api/alerts/webhook'
        send_resolved: true
        http_config:
          basic_auth:
            username: 'alertmanager'
            password: 'webhook_secret'

inhibit_rules:
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'service', 'instance']